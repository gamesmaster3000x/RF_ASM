// This CrimsonBasic program was automatically generated by the Crimson compiler.
// Copyright (c) 2022-2023 GenElectrovise https://github.com/GenElectrovise and GamesMaster3000X https://github.com/gamesmaster3000x
// Crimson version v0.0
// Crimson and RedFoxAssembly (RFASM) are parts of GamesMaster3000X's RedFoxVirtualMachine.
// The main repository for this project can be found at: https://github.com/gamesmaster3000x/RF_ASM
// Crimson and RFASM were implemented by me, GenElectrovise.
// My development fork of the project can be found at: https://github.com/GenElectrovise/RF_ASM


// ============================== Global Variables ==============================

// ============================== Entry Function ==============================
SUB:
SCP: 
 ARB: example basic call
    ARB: example assemby call
    ARB: ScopeVariableCStatement
    ARB: ScopeVariableCStatement
    SCP: 
 // a<int>=/Call: utils.multiply()
    SCP: 
 // b<int>=/Call: utils.times()
    SCP: 
 
    JMP: NEXT_ELIF
    SCP: 
 SCP: 
 // counter<int>=5/
    JMP: END_IF_BLOCK_UNIQUE_BRANCH_NAME
    LAB: END_IF_BLOCK_UNIQUE_BRANCH_NAME
    
    SCP: 
 // FC start
    JMP: func_call_0
    // FC end
    ARB: ScopeVariableCStatement
    SCP: 
 // i<int>=/Call: heap.alloc()
    SCP: 
 // i<int>=4/
    SCP: 
 // FC start
    JMP: func_write_0
    // FC end
    ARB: ScopeVariableCStatement
    SCP: 
 // ret<int>=/Call: heap.alloc()
    SCP: 
 // ret<int>=/Call: utils.multiply()
    RET

// ============================== Functions ==============================
